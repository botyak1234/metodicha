#include <iostream>
#include <cmath>
#include <iomanip>
#include <windows.h>
#include <algorithm>
#include <vector>
#include <string>
#include <sstream>
#include <cstring>
#include <fstream>
#include <vector>
#include <stack>
using namespace std;



class queue
{
	struct element
	{
		int inf;
		element* next;
		element(int x) :inf(x), next(0) {}
	};
	element* head, * tail;
public:
	queue() :head(0), tail(0) {}
	bool empty()
	{
		return head == 0;
	}

	int prosmotr()
	{
		if (!empty())
		{
			return head->inf;
		}
	}

	int get()
	{
		if (!empty())
		{
			element* t = head;
			int i = t->inf;
			head = t->next;
			if (head == 0)
			{
				tail = 0;
			}
			delete t;
			return i;
		}
	}
	void put(int data)
	{
		element* t = tail;
		tail = new element(data);
		if (!head)
		{
			head = tail;
		}
		else
		{
			t->next = tail;
		}
	}


	


};



int main() {
   queue s1, s2;
   int c = 0;
   s1.put(0);
   s1.put(1);
   s1.put(1);
   s1.put(1);
   s1.put(2);
   s1.put(2);
   s1.put(3);
   while (!s1.empty())
   {
	   if (s1.get() != s2.prosmotr())
	   {
		   s2.put(s1.get());
	   }
	   else c++;
   }
   while (!s2.empty())
   {
	   cout << s2.get();
   }
}

/*
0 1 1 1 2 2 3
3
0 1 2 3
*/


