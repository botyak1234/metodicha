#include <iostream>
#include <cmath>
#include <iomanip>
#include <windows.h>
#include <algorithm>
#include <vector>
#include <string>
#include <sstream>
#include <cstring>
#include <fstream>
#include <vector>
#include <stack>
using namespace std;



class Stack {
private:
    struct Node {
        int data;
        Node* next;
    };
    Node* top;
public:
    Stack() 
    {
        top = NULL;
    }
    void push(int value) {
        Node* newNode = new Node;
        newNode->data = value;
        newNode->next = top;
        top = newNode;
    }
    bool empty()
    {
        return top == 0;
    }
       
    int TOP()
    {
        if (!empty()) top->data;
    }

    int pop() 
    {
        if (top == NULL) {
            cout << "Stack is empty" << endl;
        }
        else {
            Node* temp = top;
            int i = temp->data;
            top = temp->next;
            delete temp;
            return i;
        }
    }
    void display() 
    {
        Node* temp = top;
        while (temp != NULL) {
            cout << temp->data << " ";
            temp = temp->next;
        }
        cout << endl;
    }
};



int main() {
    Stack s1, s2;
    int c = 0;
    s1.push(0);
    s1.push(1);
    s1.push(1);
    s1.push(1);
    s1.push(2);
    s1.push(2);
    s1.push(3);
    while (!s1.empty())
    {
        if (s1.pop() != s2.TOP()) s2.push(s1.pop());
        else c++;
    }
    s2.display();
}
