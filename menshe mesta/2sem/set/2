#include <iostream>
#include <cmath>
#include <iomanip>
#include <windows.h>
#include <algorithm>
#include <vector>
#include <string>
#include <sstream>
#include <cstring>
#include <fstream>
#include <stack>
#include <list>
#include <set>
using namespace std;


set<char> digitsInAllStrings(const vector<string>& strings) 
{
    if (strings.empty()) return {};

    set<char> digits;
    for (char c : strings[0]) 
    {
        if (isdigit(c)) digits.insert(c);
    }

    for (int i = 1; i < strings.size(); ++i) 
    {
        set<char> tempDigits;
        for (char c : strings[i]) 
        {
            if (isdigit(c)) tempDigits.insert(c);
        }
        set<char> intersection;
        set_intersection(digits.begin(), digits.end(), tempDigits.begin(), tempDigits.end(), inserter(intersection, intersection.begin()));
        digits = intersection;
    }
    return digits;
}

int main() 
{
    int n; cin >> n;
    string ss;
    vector<string> strings;
    for (int i = 0; i < n; i++)
    {
        cin >> ss;
    }
    set<char> digits = digitsInAllStrings(strings);
    for (char c : digits) 
    {
        cout << c << " ";
    }
    cout << endl;
}
