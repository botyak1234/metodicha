#include <iostream>
#include <cmath>
#include <iomanip>
#include <windows.h>
#include <algorithm>
#include <vector>
#include <string>
#include <sstream>
#include <cstring>
#include <fstream>
#include <stack>
#include "queue.cpp"
#include "list.cpp"
#include <map>
#include <list>
#include <set>
using namespace std;


int main()
{
    ifstream in("input.txt");
    ofstream out("output.txt");
    string sentence;
    set<string> povest;//создаю множества для каждого типа предложения
    set<string> voskl;
    set<string> cho_to;
    map<string, int> itog_words;
    while (getline(in, sentence, '.') || getline(in, sentence, '?') || getline(in, sentence, '!'))
    {
        bool is_povest = sentence.back() == '.';//проверяю каким оказывается предложение
        bool is_voskl = sentence.back() == '!';
        istringstream ss(sentence);
        string word;
        while (ss >> word)
        {
            transform(word.begin(), word.end(), word.begin(), tolower);
            if (is_povest)//если оно повествовательное, то добавляю слово в множество повестовательных
            {
                povest.insert(word);
            }
            if (is_voskl)//если восклицательное, то в множество восклицательных
            {
                voskl.insert(word);
            }
        }
    }
    set_intersection(povest.begin(), povest.end(), voskl.begin(), voskl.end(), inserter(cho_to, cho_to.begin()));//затем пересекаю
    cout << size(cho_to) << endl;
    for (auto it = cho_to.begin(); it != cho_to,end(); ++it) 
    {
        out << *it << ' ' << endl;
    }
} 

/*
fsdgs dsa1 privet. Privet fsdgs dsa1! gfdhkjl1? dasfjh2134.

3
fsdgs dsa1 privet
*/
