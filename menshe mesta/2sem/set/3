#include <iostream>
#include <cmath>
#include <iomanip>
#include <windows.h>
#include <algorithm>
#include <vector>
#include <string>
#include <sstream>
#include <cstring>
#include <fstream>
#include <stack>
#include "queue.cpp"
#include "list.cpp"
#include <map>
#include <list>
#include <set>
using namespace std;


int main()
{
    ifstream in("input.txt");
    ofstream out("output.txt");
    string sentence;
    set<string> povest;
    set<string> voskl;
    set<string> cho_to;
    map<string, int> itog_words;
    while (getline(in, sentence, '.') || getline(in, sentence, '?') || getline(in, sentence, '!'))
    {
        bool is_povest = sentence.back() == '.';
        bool is_voskl = sentence.back() == '!';
        istringstream ss(sentence);
        string word;
        while (ss >> word)
        {
            transform(word.begin(), word.end(), word.begin(), tolower);
            if (is_povest)
            {
                povest.insert(word);
            }
            if (is_voskl)
            {
                voskl.insert(word);
                set_intersection(povest.begin(), povest.end(), voskl.begin(), voskl.end(), inserter(cho_to, cho_to.begin()));
                if (!cho_to.empty()) itog_words[word]++;
                voskl.clear();
            }
        }
    }
    for (auto it = itog_words.begin(); it != itog_words.end(); ++it) {
        out << it->first << " : " << it->second << endl;
    }
}
