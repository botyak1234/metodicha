#include <iostream>
#include <cmath>
#include <iomanip>
#include <windows.h>
#include <algorithm>
#include <vector>
#include <string>
#include <sstream>
#include <cstring>
#include <fstream>
#include <vector>

using namespace std;
ifstream in("input.txt");
ofstream out("output. txt");

class novoe
{
private:
	int* IntArray = new int[n];
public:
	novoe() {}
	
	/*void operator ++()
	{
		for (int i = 0; i < n; i++) ++IntArray[i];
	}*/
	void operator ++()
	{
		for (int i = 0; i < n; i++) IntArray[i]++;
	}
	void operator *(int scalyar)
	{
		for (int i = 0; i < n; i++) IntArray[i] *= scalyar;
	}
	/*void operator == (int* arr)
	{
		for (int i = 0; i < n; i++)
		{
			arr[i] = IntArray[i];
		}
	}*/
	int n;
	void vvod(int n)
	{
		for (int i = 0; i < n; i++) cin >> IntArray[i];
	}
	void vivod(int n)
	{
		for (int i = 0; i < n; i++) cout << IntArray[i] << ' ';
		cout << endl;
	}
	void sortirovka(int n)
	{
		int lowkey;
		int lowkeyint;
		int lowindex;
		for (int i = 0; i < n - 1; i++)
		{
			lowindex = i;
			lowkey = IntArray[i];
			for (int j = i + 1; j < n; j++)
			{
				if (IntArray[j] < lowkey)
				{
					lowkey = IntArray[j];
					lowindex = j;
				}
			}
			swap(IntArray[i], IntArray[lowindex]);
		}
	}
	int razmer()
	{
		return sizeof(IntArray);
	}
	double summa(int n)
	{
		int s = 0;
		for (int i = 0; i < n; i++) s += IntArray[i];
		return s;
	}
};



int main()
{
	
	
	
	
	
	/*novoe f;
	cin >> f.n;
	f.vvod(f.n);
	novoe ff = f;
	ff.vivod(ff.n);*/
	
	
	
	
	//novoe firstObject;
	//firstObject.n = a;
	//firstObject.vvod(firstObject.n);
	//firstObject.sortirovka(firstObject.n);
	//++firstObject;
	//int* a = new int[firstObject.n];
	///*firstObject = a;*/
	////firstObject * 2;
	//firstObject.vivod(firstObject.n);
}
